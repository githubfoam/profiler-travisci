---
sudo: required
dist: bionic
env:
  global:
  # auto vagrant installation
notifications:
  slack:
    on_failure: always

fleet_script_gnufortran_openmp_tasks : &fleet_script_gnufortran_openmp_tasks
      script:
        - sudo apt-get install -qqy gfortran # GNU Fortran profiler
        - sudo apt-get install -qqy valgrind kcachegrind # valgrind profiler
        - sudo apt-get install -qqy google-perftools libgoogle-perftools4 # Gperftools profiler
        - gfortran --version
        - echo "=============WITHOUT OPENMP STARTS============================="
        - echo "=========================================="
        - pushd $(pwd)
        - cd lab2
        - make
        - popd
        - echo "================WITHOUT OPENMP ENDS============================"
        - echo "=========================================="
        - echo "=============OPENMP STARTS============================="
        - echo "=========================================="
        - pushd $(pwd)
        - cd lab3
        - make
        - popd
        - echo "=============OPENMP ENDS============================="
        - echo "=========================================="

fleet_script_tasks : &fleet_script_tasks
      script:
        - python --version
fleet_install_tasks : &fleet_install_tasks
      install:
        - pip install -r requirements.txt


matrix:
  fast_finish: true
  include:

    - name: "gnu fortran openmp Python 3.7 on bionic amd64"
      os: linux
      dist: bionic
      arch: amd64
      language: python
      python: 3.7
      env:
        - OMP_NUM_THREADS=4 #https://docs.travis-ci.com/user/languages/c/#openmp-projects
      compiler:
       - gcc
       - clang
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
      <<: *fleet_install_tasks
      <<: *fleet_script_tasks
      <<: *fleet_script_gnufortran_openmp_tasks
      after_success:
        - deactivate
